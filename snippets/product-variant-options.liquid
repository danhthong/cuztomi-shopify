{% comment %}
  Renders product variant options
  Accepts:
  - product: {Object} product object.
  - option: {Object} current product_option object.
  - block: {Object} block object.
  - has_color_swatch: {Boolean} for display color swatches.
  Usage:
  {% render 'product-variant-options',
    product: product,
    option: option,
    block: block,
    has_color_swatch: false
  %}
{% endcomment %}
{%- liquid
  assign variants_available_arr = product.variants | map: 'available'
  # theme-check-disable VariableName
  assign variants_option1_arr = product.variants | map: 'option1'
  assign variants_option2_arr = product.variants | map: 'option2'
  assign variants_option3_arr = product.variants | map: 'option3'
  # theme-check-enable VariableName

  assign product_form_id = 'product-form-' | append: section.id
-%}

{%- for value in option.values -%}
  {% liquid
    # get color_value for color option
    assign color_value = null
    if settings.enable_color_swatch and has_color_swatch
      if value.swatch.image != blank
        assign init_color_value = value.name | handle | strip
        assign color_image = value.swatch.image | image_url: width: 60
        assign color_value = 'url(' | append: color_image | append: ') no-repeat center/cover'
      elsif value.swatch.color != blank
        assign init_color_value = value.name | handle | strip
        assign color_value = 'rgb(' | append: value.swatch.color.rgb | append: ')'
      else
        assign init_color_value = value.name | handle | strip
        assign color_value = init_color_value | remove: '-'
      endif

      # overwrite from custom colors textarea
      if settings.custom_colors != blank
        assign custom_colors_string = settings.custom_colors | strip
        assign custom_colors_obj = custom_colors_string | newline_to_br | split: '<br />'

        for obj in custom_colors_obj
          assign obj_strip = obj | strip
          assign obj_key = obj_strip | split: ':' | first
          assign obj_value = obj_strip | split: ':' | last
          assign obj_color_name = obj_key | handle | strip

          if init_color_value == obj_color_name
            assign obj_color_value = obj_value | strip
            if obj_color_value contains 'gradient'
              assign color_value = obj_color_value
            else
              assign color_value = obj_color_value | remove: '-'
            endif
            break
          endif
        endfor
      endif
    endif
  %}

  {%- liquid
    assign option_disabled = true

    for option1_name in variants_option1_arr
      case option.position
        when 1
          if variants_option1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
        when 2
          if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
        when 3
          if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == product.selected_or_first_available_variant.option2 and variants_option3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
      endcase
    endfor

    assign is_show = false
    if is_product_card == true
      if value.available
        assign is_show = true
      endif
    else
      assign is_show = true
    endif
  -%}

  {% if is_show %}
    {% if settings.enable_color_swatch and has_color_swatch and is_dropdown != true %}
      {% liquid
        assign variant_link = product.url

        for variant in product.variants
          assign flag = false
          if variant.available
            for option_variant in variant.options
              if option_variant.id == value.id
                assign flag = true
                break
              endif
            endfor
          endif

          if flag == true
            assign variant_link = variant.url
            assign variant_id = variant.id
            break
          endif
        endfor
      %}

      {%- capture input_id -%}
        {%- if section_id != blank -%}{{ section_id }}-{{ option.position }}-{{ forloop.index0 }}-{{ product.id }}{%- else -%}{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}-{{ product.id }}{%- endif -%}
      {%- endcapture -%}
      {%- capture input_name -%}
        {%- if section_id != blank -%}{{ option.name }}-{{ section_id }}-{{ product.id }}{%- else -%}{{ option.name }}-{{ section.id }}-{{ product.id }}{%- endif -%}
      {%- endcapture -%}
      <input
        type="radio"
        id="{{ input_id }}"
        name="{{ input_name }}"
        value="{{ value | escape }}"
        {% if variant_link %}
          data-variant-link="{{ variant_link }}"
        {% endif %}
        {% if variant_id %}
          data-variant-id="{{ variant_id }}"
        {% endif %}
        {% if is_product_card != true %}
          form="{{ product_form_id }}"
        {% endif %}
        {% if option.selected_value == value %}
          checked
        {% endif %}
        class="{% if option_disabled and is_product_card != true %}disabled{% if unavailable_options_clickable == true %} always-clickable{% endif %}{% endif %}"
        {% if option_disabled and is_product_card != true and unavailable_options_clickable != true %}
          disabled
        {% endif %}
        tabindex="0"
      >
      {% liquid
        # additional check for variant image output only for Swatch trigger option
        assign color_trigger = settings.trigger_swatch | strip | newline_to_br | split: '<br />'
        assign name_option = option.name | handle | strip
        assign is_swatch_trigger_option = false
        for item in color_trigger
          assign item_temp = item | handle | strip
          if name_option == item_temp
            assign is_swatch_trigger_option = true
          endif
        endfor
      %}
      {% if swatch_type != blank and swatch_type == 'variant_image' and is_swatch_trigger_option %}
        <label
          for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}-{{ product.id }}{%- if mobile == true -%}-mobile{%- endif -%}"
          class="variant-swatch variant-swatch--{{ variant_image_size }}"
          style="
            background-image:url(
              {%- liquid
                assign option_index = option.position | minus: 1
                for variant in product.variants
                    if variant.options[option_index] == value
                      if variant.image != blank
                        assign image_width = 102
                        assign image_ratio = variant.image.aspect_ratio
                        assign calc_ratio = 1
                        if variant_image_size == 'portrait'
                          assign setting_ratio = 0.73
                        elsif variant_image_size == 'square'
                          assign setting_ratio = 1
                        elsif variant_image_size == 'landscape'
                          assign setting_ratio = 1.33
                        else
                          assign setting_ratio = 0.74
                        endif
                        if image_ratio > setting_ratio
                          assign calc_ratio = image_ratio | divided_by: setting_ratio | round: 2
                          assign image_width = image_width | times: calc_ratio
                        endif

                        echo variant.image | image_url: width: image_width
                      else
                        echo 'data:image/svg+xml,%3Csvg%20width%3D%2250%22%20height%3D%2267%22%20viewBox%3D%220%200%2050%2067%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Crect%20width%3D%2250%22%20height%3D%2267%22%20fill%3D%22%23F5F5F5%22%2F%3E%3Cg%20opacity%3D%220.3%22%3E%3Cpath%20d%3D%22M17.5%2036.8333L23.3333%2034.3333L26.6667%2035.8483M29.0658%2041.1008L30.8333%2039.3333M30.8333%2039.3333L32.6008%2037.5658M30.8333%2039.3333L29.0658%2037.5658M30.8333%2039.3333L32.6008%2041.1008M28.3333%2031.8333C27.8913%2031.8333%2027.4674%2031.6577%2027.1548%2031.3452C26.8423%2031.0326%2026.6667%2030.6087%2026.6667%2030.1667C26.6667%2029.7246%2026.8423%2029.3007%2027.1548%2028.9882C27.4674%2028.6756%2027.8913%2028.5%2028.3333%2028.5C28.7754%2028.5%2029.1993%2028.6756%2029.5118%2028.9882C29.8244%2029.3007%2030%2029.7246%2030%2030.1667C30%2030.6087%2029.8244%2031.0326%2029.5118%2031.3452C29.1993%2031.6577%2028.7754%2031.8333%2028.3333%2031.8333Z%22%20stroke%3D%22black%22%20stroke-width%3D%221.1%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%2F%3E%3Cpath%20d%3D%22M25.8333%2041H18C17.8674%2041%2017.7402%2040.9473%2017.6464%2040.8536C17.5527%2040.7598%2017.5%2040.6326%2017.5%2040.5V26.5C17.5%2026.3674%2017.5527%2026.2402%2017.6464%2026.1464C17.7402%2026.0527%2017.8674%2026%2018%2026H32C32.1326%2026%2032.2598%2026.0527%2032.3536%2026.1464C32.4473%2026.2402%2032.5%2026.3674%2032.5%2026.5V34.3333%22%20stroke%3D%22black%22%20stroke-width%3D%221.1%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E'
                      endif
                      break
                    endif
                endfor
            -%}
              );
            background-position: center;
            background-repeat: no-repeat;
            background-size: cover;
          "
          title="{{- value -}}"
        >
          <span class="visually-hidden">{{ value -}}</span>
        </label>
      {% else %}
        <label
          for="{{ input_id }}"
          class="color-swatch"
          style="--swatch-color: {{ color_value }}; border-radius: {{ settings.swatch_border_radius }}px;"
          title="{{ value | escape }}"
        >
          <span class="visually-hidden">{{ value -}}</span>
        </label>
      {% endif %}

    {% else %}
      {% if block.settings.picker_type == 'button' %}
        <input
          type="radio"
          id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
          name="{{ option.name }}"
          value="{{ value | escape }}"
          {% if is_product_card != true %}
            form="{{ product_form_id }}"
          {% endif %}
          {% if option.selected_value == value %}
            checked
          {% endif %}
          class="{% if option_disabled and is_product_card != true %}disabled{% if unavailable_options_clickable == true %} always-clickable{% endif %}{% endif %}"
          {% if option_disabled and is_product_card != true and unavailable_options_clickable != true %}
            disabled
          {% endif %}
        >
        <label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}">
          {{ value -}}
          <span class="visually-hidden">{{ 'products.product.variant_sold_out_or_unavailable' | t }}</span>
        </label>
      {% elsif block.settings.picker_type == 'dropdown' %}
        {% comment %}
           <option
            value="{{ value | escape }}"
            {% if option.selected_value == value %}
              selected="selected"
            {% endif %}
          >
            {% if option_disabled -%}
              {{- 'products.product.value_unavailable' | t: option_value: value -}}
            {%- else -%}
              {{- value -}}
            {%- endif %}
          </option>
        {% endcomment %}
        {% comment %} items for custom select {% endcomment %}
        <li
          data-value="{{ value | escape }}"
          {% if settings.enable_color_swatch and has_color_swatch and is_dropdown == true %}
            data-color="{{ color_value }}"
          {% endif %}
        >
          <input
            type="radio"
            id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
            name="{{ option.name }}"
            value="{{ value | escape }}"
            {% if no_form_id != true %}
              form="{{ product_form_id }}"
            {% endif %}
            {% if option.selected_value == value %}
              checked
            {% endif %}
            class="{% if option_disabled and is_product_card != true %}disabled{% if unavailable_options_clickable == true %} always-clickable{% endif %}{% endif %}"
            {% if option_disabled and is_product_card != true and unavailable_options_clickable != true %}
              disabled
            {% endif %}
          >
          <label
            for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
            class="pills-variant-labels secondary_text"
          >
            <span
              class="select-labels{% if settings.enable_color_swatch and has_color_swatch and is_dropdown == true %} select-labels--color{% endif %}"
              {% if settings.enable_color_swatch and has_color_swatch and is_dropdown == true %}
                style="--swatch-color: {{ color_value }}; --border-radius: {{ settings.swatch_border_radius }}px;"
              {% endif %}
            >
              {{- value | escape -}}
            </span>
          </label>
        </li>
      {% endif %}
    {% endif %}
  {% endif %}
{%- endfor -%}
