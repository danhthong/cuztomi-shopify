<!doctype html>
<html
  class="no-js"
  lang="{{ request.locale.iso_code }}"
  data-scheme="{{ settings.color_scheme }}"
  dir="{% render 'direction' %}"
>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="">
    <link rel="canonical" href="{{ canonical_url }}">
    <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>

    {%- if settings.favicon != blank -%}
      <link
        rel="icon"
        type="image/png"
        href="{{ settings.favicon | image_url: width: 32, height: 32 }}"
      >
    {%- endif -%}

    {%- unless settings.type_header_font.system? -%}
      <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
    {%- endunless -%}

    <title>{{ page_title }}</title>

    {% if page_description %}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}

    {% render 'meta-tags' %}

    <script src="{{ 'constants.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'pubsub.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'gsap.min.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'ScrollTrigger.min.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'swiper-bundle.min.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'global.js' | asset_url }}" defer="defer"></script>

    {% comment %} DYNAMICALLY RETURNS ALL SCRIPTS REQUIRED BY SHOPIFY. {% endcomment %}
    {{ content_for_header }}

    {% comment %} FONTS {% endcomment %}
    {% render 'fonts' %}

    {% comment %} COLOR VARIABLES {% endcomment %}
    {% render 'color-vars' %}

    {% comment %} BASIC VARIABLES AND STYLES {% endcomment %}
    {% render 'base-vars-styles' %}

    {% comment %} SWIPER MIN CSS {% endcomment %}
    {{ 'swiper-bundle.min.css' | asset_url | stylesheet_tag }}

    {% comment %} BASIC STYLES {% endcomment %}
    {{ 'base.css' | asset_url | stylesheet_tag }}

    {% comment %} RICH TEXT (RTE) STYLES {% endcomment %}
    {{ 'component-rte.css' | asset_url | stylesheet_tag }}

    {% comment %} PREDICTIVE SEARCH STYLES {% endcomment %}
    {%- if settings.predictive_search_enabled or settings.predictive_search_header_enabled -%}
      <link
        rel="stylesheet"
        href="{{ 'component-predictive-search.css' | asset_url }}"
        media="print"
        onload="this.media='all'"
      >
    {%- endif -%}

    {% comment %} CART & CART DRAWER {% endcomment %}
    {% comment %} If cart drawer is disabled, the assets below are loaded in the file main-cart-items.liquid {% endcomment %}
    {%- if settings.enable_cart_drawer -%}
      {{ 'component-cart-drawer.css' | asset_url | stylesheet_tag }}
      {{ 'component-cart-items.css' | asset_url | stylesheet_tag }}
      <script src="{{ 'cart.js' | asset_url }}" defer="defer"></script>
      <script src="{{ 'cart-drawer.js' | asset_url }}" defer="defer"></script>

      {% if settings.show_shipping or settings.show_cart_recommended_products %}
        {{ 'component-cart-shipping.css' | asset_url | stylesheet_tag }}
      {% endif %}
    {%- endif -%}

    {% comment %} PRODUCTS STYLES {% endcomment %}
    {% assign is_preload = false %}
    {%- if request.page_type == 'product' -%}
      {%- assign is_preload = true -%}
    {%- endif -%}
    {{ 'section-main-product.css' | asset_url | stylesheet_tag: preload: is_preload }}
    {%- if settings.quickview_show or settings.show_on_mobile -%}
      {{- 'component-deferred-media.css' | asset_url | stylesheet_tag -}}
      {{- 'quick-add.css' | asset_url | stylesheet_tag: preload: is_preload -}}
      <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
      <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
    {%- elsif settings.settings.add_to_cart_enabled -%}
      <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {% comment %} FONTS PRELOAD {% endcomment %}
    {%- unless settings.type_body_font.system? -%}
      {% comment %}theme-check-disable AssetPreload{% endcomment %}
      <link rel="preload" as="font" href="{{ settings.type_body_font | font_url }}" type="font/woff2" crossorigin>
      {% comment %}theme-check-enable AssetPreload{% endcomment %}
    {%- endunless -%}
    {%- unless settings.type_header_font.system? -%}
      {% comment %}theme-check-disable AssetPreload{% endcomment %}
      <link rel="preload" as="font" href="{{ settings.type_header_font | font_url }}" type="font/woff2" crossorigin>
      {% comment %}theme-check-enable AssetPreload{% endcomment %}
    {%- endunless -%}

    <script>
      document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
      if (Shopify.designMode) {
        document.documentElement.classList.add('shopify-design-mode');
      }
    </script>

    <script src="{{ 'popup.js' | asset_url }}" defer="defer"></script>

    {% if settings.show_back_to_top %}
      <script src="{{ 'scroll-top.js' | asset_url }}" defer="defer"></script>
    {% endif %}

    <script>
      let cscoDarkMode = {};

      (function () {
        const body = document.querySelector('html[data-scheme]');

        cscoDarkMode = {
          init: function (e) {
            this.initMode(e);
            window.matchMedia('(prefers-color-scheme: dark)').addListener((e) => {
              this.initMode(e);
            });

            window.addEventListener('load', () => {
              const toggleBtns = document.querySelectorAll('.header__toggle-scheme');
              toggleBtns.forEach((btn) => {
                btn.addEventListener('click', (e) => {
                  e.preventDefault();
                  if ('auto' === body.getAttribute('data-scheme')) {
                    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
                      cscoDarkMode.changeScheme('light', true);
                    } else if (window.matchMedia('(prefers-color-scheme: light)').matches) {
                      cscoDarkMode.changeScheme('dark', true);
                    }
                  } else {
                    if ('dark' === body.getAttribute('data-scheme')) {
                      cscoDarkMode.changeScheme('light', true);
                    } else {
                      cscoDarkMode.changeScheme('dark', true);
                    }
                  }
                });
              });
            });
          },
          initMode: function (e) {
            let siteScheme = false;
            switch (
              '{{ settings.color_scheme }}' // Field. Userâ€™s system preference.
            ) {
              case 'dark':
                siteScheme = 'dark';
                break;
              case 'light':
                siteScheme = 'light';
                break;
              case 'system':
                siteScheme = 'auto';
                break;
            }
            if ('{{ settings.dark_mode_toggle }}') {
              // Field. Enable dark/light mode toggle.
              if ('light' === localStorage.getItem('_color_schema')) {
                siteScheme = 'light';
              }
              if ('dark' === localStorage.getItem('_color_schema')) {
                siteScheme = 'dark';
              }
            }
            if (siteScheme && siteScheme !== body.getAttribute('data-scheme')) {
              this.changeScheme(siteScheme, false);
            }
          },
          changeScheme: function (siteScheme, cookie) {
            body.classList.add('scheme-toggled');
            body.setAttribute('data-scheme', siteScheme);
            if (cookie) {
              localStorage.setItem('_color_schema', siteScheme);
            }
            setTimeout(() => {
              body.classList.remove('scheme-toggled');
            }, 100);
          },
        };
      })();

      cscoDarkMode.init();

      document.addEventListener('shopify:section:load', function () {
        setTimeout(() => {
          cscoDarkMode.init();
        }, 100);
      });

      const calcScrollbarWidth = () => {
        const div = document.createElement('div');
        div.style.cssText = 'width: 100px; height: 100px; overflow-y: scroll; position: absolute; top: -9999px;';
        document.body.appendChild(div);
        const scrollbarWidth = div.offsetWidth - div.clientWidth;
        document.body.removeChild(div);
        document.documentElement.style.setProperty('--scrollbar-width', `${scrollbarWidth}px`);
      };

      window.addEventListener('DOMContentLoaded', calcScrollbarWidth);
    </script>
  </head>

  <body class="template-{{ template.name }} template-{{ template | replace: '.', '-' }}">
    <a
      class="skip-to-content-link button visually-hidden"
      href="#MainContent"
    >
      {{ 'accessibility.skip_to_text' | t }}
    </a>

    {% sections 'header-group' %}
    {% sections 'overlay-group' %}
    {% if settings.show_breadcrumbs %}
      {% render 'breadcrumbs' %}
    {% endif %}

    <main id="MainContent" class="content-for-layout focus-none" role="main" tabindex="-1">
      {{ content_for_layout }}
    </main>
    {% sections 'footer-group' %}

    {% if settings.show_back_to_top %}
      {% render 'scroll-top' %}
    {% endif %}

    {%- if request.page_type != 'cart' and settings.enable_cart_drawer -%}
      {%- render 'cart-drawer' -%}
    {%- endif -%}

    <ul hidden>
      <li id="a11y-refresh-page-message">
        {{- 'accessibility.refresh_page' | t -}}
      </li>
    </ul>

    <script>
      window.routes = {
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        cart_url: '{{ routes.cart_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}'
      };

      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t }}`,
        empty: `{{ 'general.cart.empty_cart' | t }}`,
        shop_now: `{{ 'customer.account.account_button_shop' | t }}`,
        collections_url: `{{ routes.collections_url | sort_by: 'best-selling' }}`,
        additional_service_property: `{{ 'products.product.additional_service.property_in_order' | t }}`,
      }

      window.variantStrings = {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
        unavailable_with_option: `{{ 'products.product.value_unavailable' | t: option_value: '[value]' }}`
      }

      window.theme = {
        moneyFormat: {{ shop.money_format | json }},
        quickviewMore: `{{ 'general.card.view__more' | t }}`,
        reviews: `{{ 'products.product.reviews' | t }}`
      }

      const calcVh = () => {
        const vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty("--vh", `${vh}px`);
      }
      window.addEventListener("load", calcVh);
      window.addEventListener("resize", calcVh);
    </script>

    {%- if settings.predictive_search_enabled or settings.predictive_search_header_enabled -%}
      <script src="{{ 'search-form.js' | asset_url }}" defer="defer"></script>
      <script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}
    <script src="{{ 'product-model.js' | asset_url }}" defer></script>

    <script>
      if (window.Shopify && window.Shopify.theme && navigator && navigator.sendBeacon && window.Shopify.designMode) {
        const themeKey = `dataSent_{{ theme.name }}`;
        if (!localStorage.getItem(themeKey)) {
          navigator.sendBeacon('https://cdn.ashstonestudios.com/shopify-beacon/sent/', new URLSearchParams({
            shop: window.Shopify.shop,
            role: window.Shopify.theme.role,
            route: window.location.pathname,
            themeId: window.Shopify.theme.id,
            themeStoreId: window.Shopify.theme.theme_store_id || 0,
            isThemeEditor: !!window.Shopify.designMode,
            themeName: "{{ theme.name }}",
            shopName: "{{ shop.name }}",
            shopEmail: "{{ shop.email }}"
          }));
          localStorage.setItem(themeKey, 'true');
        }
      }
    </script>
  </body>
</html>
